{"version":3,"file":"static/webpack/static/development/pages/index.js.4eeac576e07d936d0bde.hot-update.js","sources":["webpack:///./pages/index.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import \"highlight.js/styles/github-gist.css\";\nimport \"../styles/old-layout.css\";\nimport Head from \"next/head\";\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"react-模式（中文版）-on-github\"}}>{`React 模式（中文版） `}<MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"href\":\"https://github.com/keelii/reactpatterns.cn\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`on Github`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"contents\"}}>{`Contents`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component\"}}>{`函数组件 (Function component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%B1%9E%E6%80%A7%E8%A7%A3%E6%9E%84-destructuring-props\"}}>{`属性解构 (Destructuring props)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#jsx-%E4%B8%AD%E7%9A%84%E5%B1%95%E5%BC%80%E5%B1%9E%E6%80%A7-jsx-spread-attributes\"}}>{`JSX 中的展开属性 (JSX spread attributes)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%90%88%E5%B9%B6%E8%A7%A3%E6%9E%84%E5%B1%9E%E6%80%A7%E5%92%8C%E5%85%B6%E5%AE%83%E5%80%BC-merge-destructured-props-with-other-values\"}}>{`合并解构属性和其它值 (Merge destructured props with other values)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93-conditional-rendering\"}}>{`条件渲染 (Conditional rendering)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%AD%90%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B-children-types\"}}>{`子元素类型 (Children types)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%AD%90%E5%85%83%E7%B4%A0-array-as-children\"}}>{`数组做为子元素 (Array as children)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E5%81%9A%E4%B8%BA%E5%AD%90%E5%85%83%E7%B4%A0-function-as-children\"}}>{`函数做为子元素 (Function as children)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E6%B8%B2%E6%9F%93%E5%B1%9E%E6%80%A7-render-prop\"}}>{`渲染属性 (Render prop)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BC%A0%E9%80%92-children-pass-through\"}}>{`子组件的传递 (Children pass-through)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E4%BB%A3%E7%90%86%E7%BB%84%E4%BB%B6-proxy-component\"}}>{`代理组件 (Proxy component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E6%A0%B7%E5%BC%8F%E7%BB%84%E4%BB%B6-style-component\"}}>{`样式组件 (Style component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E7%BB%84%E7%BB%87%E4%BA%8B%E4%BB%B6-event-switch\"}}>{`组织事件 (Event switch)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6-layout-component\"}}>{`布局组件 (Layout component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component\"}}>{`容器组件 (Container component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6-higher-order-component\"}}>{`高阶组件 (Higher-order component)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87-state-hoisting\"}}>{`状态提升 (State hoisting)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#%E5%8F%97%E6%8E%A7%E8%BE%93%E5%85%A5-controlled-input\"}}>{`受控输入 (Controlled input)`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"函数组件-function-component\"}}>{`函数组件 (Function component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`函数组件`}</MDXTag>{` 是最简单的一种声明可复用组件的方法`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`他们就是一些简单的函数。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}></MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi there!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`从第一个形参中获取属性集 (props)\nCollect `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` from the first argument of your function.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {props.name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`按自己的需要可以在函数组件中定义任意变量`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`最后一定要返回你的 React 组件。`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` style = {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`fontWeight`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"bold\"`}</MDXTag>{`,\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`color`}</MDXTag>{`: context.color\n  };\n\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`style`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{style}`}</MDXTag>{`>`}</MDXTag>{`Hi {props.name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`defaultProps`}</MDXTag>{` 为任意必有属性设置默认值`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {props.name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}\nGreeting.defaultProps = {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"Guest\"`}</MDXTag>{`\n};`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"属性解构-destructuring-props\"}}>{`属性解构 (Destructuring props)`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`解构赋值`}</MDXTag>{` 是一种 JavaScript 特性。  `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`出自 ES2015 版的 JavaScript 新规范。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以看起来可能并不常见。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`好比字面量赋值的反转形式。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-js\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` person = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"chantastic\"`}</MDXTag>{` };\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` { name } = person;`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`同样适用于数组。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-js\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` things = [`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"one\"`}</MDXTag>{`, `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"two\"`}</MDXTag>{`];\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` [first, second] = things;`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`解构赋值被用在很多 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`函数组件`}</MDXTag>{` 中。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`下面声明的这些组件是相同的。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {props.name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}\n\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ name }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`有一种语法可以在对象中收集剩余属性。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`叫做 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`剩余参数`}</MDXTag>{`，看起来就像这样。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ name, ...restProps }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`那三个点 (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`...`}</MDXTag>{`) 会把所有的剩余属性分配给 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`restProps`}</MDXTag>{` 对象`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`然而，你能使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`restProps`}</MDXTag>{` 做些什么呢？`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`继续往下看...`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"jsx-中的展开属性-jsx-spread-attributes\"}}>{`JSX 中的展开属性 (JSX spread attributes)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`属性展开是 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/introducing-jsx.html\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`JSX`}</MDXTag>{` 中的一个的特性。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`它是一种语法，专门用来把对象上的属性转换成 JSX 中的属性`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`参考上面的 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%B1%9E%E6%80%A7%E8%A7%A3%E6%9E%84-(Destructuring-props)\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`属性解构`}</MDXTag>{`,`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>\n{`我们可以 `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`扩散`}</MDXTag>{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`restProps`}</MDXTag>{` 对象的所有属性到 div 元素上`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ name, ...restProps }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...restProps`}</MDXTag>{`}>`}</MDXTag>{`Hi {name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这让 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Gretting`}</MDXTag>{` 组件变得非常灵活。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以通过传给 Gretting 组件 DOM 属性并确定这些属性一定会被传到 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{` 上\nWe can pass DOM attributes to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Greeting`}</MDXTag>{` and trust that they'll be passed through to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<Greeting name=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"Fancy pants\"`}</MDXTag>{` className=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"fancy-greeting\"`}</MDXTag>{` id=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"user-greeting\"`}</MDXTag>{` />`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`避免传递非 DOM 属性到组件上。\nAvoid forwarding non-DOM `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` to components.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>\n{`解构赋值是如此的受欢迎，是因为它可以分离 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`组件特定的属性`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DOM/平台特定属性`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Greeting`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ name, ...platformProps }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...platformProps`}</MDXTag>{`}>`}</MDXTag>{`Hi {name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"合并解构属性和其它值-merge-destructured-props-with-other-values\"}}>{`合并解构属性和其它值 (Merge destructured props with other values)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`组件就是一种抽象。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`好的抽象是可以扩展的。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`比如说下面这个组件使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`class`}</MDXTag>{` 属性来给按钮添加样式。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`MyButton`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`button`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`\"btn\"`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...props`}</MDXTag>{`} />`}</MDXTag>{`;\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`一般情况下这样做就够了，除非我们需要扩展其它的样式类`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<MyButton className=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"delete-btn\"`}</MDXTag>{`>Delete...<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/MyButton>`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在这个例子中把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`btn`}</MDXTag>{` 替换成 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`delete-btn`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#JSX-%E4%B8%AD%E7%9A%84%E5%B1%95%E5%BC%80%E5%B1%9E%E6%80%A7-(JSX-spread-attributes)\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`JSX 中的展开属性`}</MDXTag>{` 对先后顺序是敏感的`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`扩散属性中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`className`}</MDXTag>{` 会覆盖组件上的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`className`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以改变它两的顺序，但是目前来说 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`className`}</MDXTag>{` 只有 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`btn`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`MyButton`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`button`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...props`}</MDXTag>{`} `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`\"btn\"`}</MDXTag>{` />`}</MDXTag>{`;\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们需要使用解构赋值来合并入参 props 中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`className`}</MDXTag>{` 和基础的（组件中的） `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`className`}</MDXTag>{`。\n可以通过把所有的值放在一个数组里面，然后使用一个空格连接它们。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`MyButton`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ className, ...props }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` classNames = [`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"btn\"`}</MDXTag>{`, className].join(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\" \"`}</MDXTag>{`);\n\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`button`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{classNames}`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...props`}</MDXTag>{`} />`}</MDXTag>{`;\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`为了保证 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`undefined`}</MDXTag>{` 被显示在 className 上，可以使用 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Default_values_2\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`默认值`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`function`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`MyButton`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ className = `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`\"\"`}</MDXTag>{`, ...props }`}</MDXTag>{`) `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`let`}</MDXTag>{` classNames = [`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"btn\"`}</MDXTag>{`, className].join(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\" \"`}</MDXTag>{`);\n\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`button`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{classNames}`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...props`}</MDXTag>{`} />`}</MDXTag>{`;\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"条件渲染-conditional-rendering\"}}>{`条件渲染 (Conditional rendering)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`不可以在一个组件声明中使用 if/else 语句\nYou can't use if/else statements inside a component declarations.`}<MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>\n{`所以可以使用 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`条件（三元）运算符`}</MDXTag>{` 和 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Short-circuit_evaluation\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`短路计算`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"如果\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`如果`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`{\n  condition && `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag>{`Rendered when \\`truthy\\``}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"除非\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`除非`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`{\n  condition || `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag>{`Rendered when \\`falsy\\``}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"如果-否则\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`如果-否则`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`{\n  condition ? (\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag>{`Rendered when \\`truthy\\``}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n  ) : (\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag>{`Rendered when \\`falsy\\``}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`span`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n  );\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"子元素类型-children-types\"}}>{`子元素类型 (Children types)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`很多类型都可以做为 React 的子元素。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`多数情况下会是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`数组`}</MDXTag>{` 或者 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`字符串`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"字符串-string\"}}>{`字符串 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`String`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<div>Hello World!`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"数组-array\"}}>{`数组 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`Array`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<div>{[`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"Hello \"`}</MDXTag>{`, <span>World<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/span>, \"!\"]}</`}</MDXTag>{`div>`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"数组做为子元素-array-as-children\"}}>{`数组做为子元素 (Array as children)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`将数组做为子元素是很常见的。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`列表是如何在 React 中被绘制的。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`map()`}</MDXTag>{` 方法创建一个新的 React 元素数组\nWe use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`map()`}</MDXTag>{` to create an array of React Elements for every value in the array.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<ul>\n  {[`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"first\"`}</MDXTag>{`, `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"second\"`}</MDXTag>{`].map(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`item`}</MDXTag>{` =>`}</MDXTag>{` (\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`li`}</MDXTag>{`>`}</MDXTag>{`{item}`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`li`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n  ))}\n<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/ul>`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这和使用字面量数组是一样的。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<ul>{[`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`li`}</MDXTag>{`>`}</MDXTag>{`first`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`li`}</MDXTag>{`>`}</MDXTag></MDXTag>{`, <li>second<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/li>]}</u`}</MDXTag>{`l>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这个模式可以联合解构、JSX 属性扩散以及其它组件一起使用，看起来简洁无比`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<ul>\n  {arrayOfMessageObjects.map(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ id, ...message }`}</MDXTag>{`) =>`}</MDXTag>{` (\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Message`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`key`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{id}`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...message`}</MDXTag>{`} />`}</MDXTag>{`\n  ))}\n`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`ul`}</MDXTag>{`>`}</MDXTag></MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"函数做为子元素-function-as-children\"}}>{`函数做为子元素 (Function as children)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React 组件不支持函数类型的子元素。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`然而 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E6%B8%B2%E6%9F%93%E5%B1%9E%E6%80%A7-render-prop\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`渲染属性`}</MDXTag>{` 是一种可以创建组件并以函数作为子元素的模式。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"渲染属性-render-prop\"}}>{`渲染属性 (Render prop)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这里有个组件，使用了一个渲染回调函数 children。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这样写并没有什么用，但是可以做为入门的简单例子。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` Width = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ children }`}</MDXTag>{`) =>`}</MDXTag>{` children(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`500`}</MDXTag>{`);`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`组件把 children 做为函数调用，同时还可以传一些参数。上面这个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`500`}</MDXTag>{` 就是实参。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`为了使用这个组件，我们可以在调用组件的时候传入一个子元素，这个子元素就是一个函数。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<Width>{width => `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`window is {width}`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`}<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/Width>`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以得到下面的输出。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<div>`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`window`}</MDXTag>{` is `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`500`}</MDXTag>{`<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/div>`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`有了这个组件，我们就可以用它来做渲染策略。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<Width>\n  {width => (width > `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`600`}</MDXTag>{` ? `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`min-width requirement met!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{` : `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`null`}</MDXTag>{`)}\n<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/Width>`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`如果有更复杂的条件判断，我们可以使用这个组件来封装另外一个新组件来利用原来的逻辑。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` MinWidth = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ width: minWidth, children }`}</MDXTag>{`) =>`}</MDXTag>{` (\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Width`}</MDXTag>{`>`}</MDXTag>{`{width => (width > minWidth ? children : null)}`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Width`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n);`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`显然，一个静态的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Width`}</MDXTag>{` 组件并没有什么用处，但是给它绑定一些浏览器事件就不一样了。下面有个实现的例子。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`WindowWidth`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`constructor`}</MDXTag>{`() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`super`}</MDXTag>{`();\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`width`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-number\"}}>{`0`}</MDXTag>{` };\n  }\n\n  componentDidMount() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState(\n      { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`width`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`window`}</MDXTag>{`.innerWidth },\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`window`}</MDXTag>{`.addEventListener(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"resize\"`}</MDXTag>{`, ({ target }) =>\n        `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`width`}</MDXTag>{`: target.innerWidth })\n      )\n    );\n  }\n\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.props.children(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state.width);\n  }\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`许多开发人员都喜欢 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6-higher-order-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`高阶组件`}</MDXTag>{` 来实现这种功能。但这只是个人喜好问题。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"子组件的传递-children-pass-through\"}}>{`子组件的传递 (Children pass-through)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`你可能会创建一个组件，这个组件会使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`context`}</MDXTag>{` 并且渲染它的子元素。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`SomeContextProvider`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  getChildContext() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`some`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"context\"`}</MDXTag>{` };\n  }\n\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`// 如果能直接返回 \\`children\\` 就完美了`}</MDXTag>{`\n  }\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`你将面临一个选择。把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`children`}</MDXTag>{` 包在一个 div 中并返回，或者直接返回 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`children`}</MDXTag>{`。第一种情况需要要你添加额外的标记（这可能会影响到你的样式）。第二种将产生一个没什么用处的错误。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`// option 1: extra div`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`{children}`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`// option 2: unhelpful errors`}</MDXTag>{`\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` children;`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`最好把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`children`}</MDXTag>{` 做为一种不透明的数据类型对待。React 提供了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React.Children`}</MDXTag>{` 方法来处理 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`children`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` React.Children.only(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.props.children);`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"代理组件-proxy-component\"}}>{`代理组件 (Proxy component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`(我并不确定这个名字的准确叫法 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"em\">{`译：代理、中介、装饰...`}</MDXTag>{`)`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`按钮在 web 应用中随处可见。并且所有的按钮都需要一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type=\"button\"`}</MDXTag>{` 的属性。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<button type=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"button\"`}</MDXTag>{`>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`重复的写这些属性很容易出错。我们可以写一个高层组件来代理 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{` 到底层组件。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` Button = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{` =>`}</MDXTag>{`\n  <button type=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"button\"`}</MDXTag>{` {...props}>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Button`}</MDXTag>{` 组件代替 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`button`}</MDXTag>{` 元素，并确保 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{` 属性始终是 button。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<Button />\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`// <button type=\"button\"><button>`}</MDXTag>{`\n\n<Button className=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"CTA\"`}</MDXTag>{`>Send Money<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/Button>\n/`}</MDXTag><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/ <button type=\"button\" class=\"CTA\">Send Money</`}</MDXTag>{`button>`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"样式组件-style-component\"}}>{`样式组件 (Style component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这也是一种 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E4%BB%A3%E7%90%86%E7%BB%84%E4%BB%B6-proxy-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`代理组件`}</MDXTag>{`，用来处理样式。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`假如我们有一个按钮，它使用了 \"primary\" 做为样式类。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<button type=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"button\"`}</MDXTag>{` className=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"btn btn-primary\"`}</MDXTag>{`>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们使用一些单一功能组件来生成上面的结构。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`import`}</MDXTag>{` classnames `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`from`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"classnames\"`}</MDXTag>{`;\n\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` PrimaryBtn = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`props`}</MDXTag>{` =>`}</MDXTag>{` <Btn {...props} primary />;\n\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` Btn = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ className, primary, ...props }`}</MDXTag>{`) =>`}</MDXTag>{` (\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`button`}</MDXTag>{`\n    `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`type`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`\"button\"`}</MDXTag>{`\n    `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{classnames(`}</MDXTag>{`\"`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`btn`}</MDXTag>{`\", `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`primary`}</MDXTag>{` && \"`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`btn-primary`}</MDXTag>{`\", `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`)}\n    {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...props`}</MDXTag>{`}\n  />`}</MDXTag>{`\n);`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以可视化的展示成下面的样子。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`PrimaryBtn()\n  ↳ Btn({`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`primary`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`true`}</MDXTag>{`})\n    ↳ Button({`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`className`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"btn btn-primary\"`}</MDXTag>{`}, `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`type`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"button\"`}</MDXTag>{`})\n      ↳ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`'<button type=\"button\" class=\"btn btn-primary\"></button>'`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用这些组件，下面的这几种方式会得到一致的结果。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<PrimaryBtn />\n`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Btn`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`primary`}</MDXTag>{` />`}</MDXTag>{`\n`}</MDXTag>{`<button type=\"button\" className=\"btn btn-primary\" />`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这对于样式维护来说是非常好的。它将样式的所有关注点分离到单个组件。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"组织事件-event-switch\"}}>{`组织事件 (Event switch)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当我们在写事件处理函数的时候，通常会使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`handle{事件名字}`}</MDXTag>{` 的命名方式。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`handleClick(e) { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`/* do something */`}</MDXTag>{` }`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`当需要添加很多事件处理函数的时候，这些函数名字会显得很重复。这些函数的名字并没有什么价值，因为它们只代理了一些动作或者函数。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`handleClick() { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`require`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"./actions/doStuff\"`}</MDXTag>{`)(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`/* action stuff */`}</MDXTag>{`) }\nhandleMouseEnter() { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`hovered`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`true`}</MDXTag>{` }) }\nhandleMouseLeave() { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`hovered`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`false`}</MDXTag>{` }) }`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以考虑写一个事件处理函数来根据不同的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`event.type`}</MDXTag>{` 来组织事件。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`handleEvent({type}) {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`switch`}</MDXTag>{`(type) {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`case`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"click\"`}</MDXTag>{`:\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`require`}</MDXTag>{`(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"./actions/doStuff\"`}</MDXTag>{`)(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`/* action dates */`}</MDXTag>{`)\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`case`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"mouseenter\"`}</MDXTag>{`:\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`hovered`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`true`}</MDXTag>{` })\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`case`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"mouseleave\"`}</MDXTag>{`:\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`hovered`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`false`}</MDXTag>{` })\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`default`}</MDXTag>{`:\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-built_in\"}}>{`console`}</MDXTag>{`.warn(`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\\`No case for event type \"`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-subst\"}}>{`\\${type}`}</MDXTag>{`\"\\``}</MDXTag>{`)\n  }\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`另外，对于简单的组件，你可以在组件中使用箭头函数直接调用导入的动作或者函数`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<div onClick={() => someImportedAction({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`action`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"DO_STUFF\"`}</MDXTag>{` })}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在遇到性能问题之前，不要担心性能优化。真的不要`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"布局组件-layout-component\"}}>{`布局组件 (Layout component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`布局组件表现为一些静态 DOM 元素的形式。它们一般并不需要经常更新。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`就像下面的这个组件一样，两边各自渲染了一个 children。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<HorizontalSplit\n  leftSide={<SomeSmartComponent />}\n  rightSide={<AnotherSmartComponent />}\n/>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以优化这个组件。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`HorizontalSplit 组件是两个子组件的父元素，我们可以告诉组件永远都不要更新`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`HorizontalSplit`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  shouldComponentUpdate() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-literal\"}}>{`false`}</MDXTag>{`;\n  }\n\n  render() {\n    <FlexContainer>\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`{this.props.leftSide}`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n      <div>{`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.props.rightSide}<`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-regexp\"}}>{`/div>\n    </`}</MDXTag>{`FlexContainer>;\n  }\n}`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"容器组件-container-component\"}}>{`容器组件 (Container component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\"容器用来获取数据然后渲染到子组件上，仅仅如此。\"`}{`—`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://twitter.com/jasonbonta\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`Jason Bonta`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这有一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CommentList`}</MDXTag>{` 组件。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` CommentList = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ comments }`}</MDXTag>{`) =>`}</MDXTag>{` (\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`ul`}</MDXTag>{`>`}</MDXTag>{`\n    {comments.map(comment => (\n      `}</MDXTag>{`<li>\n        {comment.body}-{comment.author}\n      </li>`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}>{`\n    ))}\n  `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`ul`}</MDXTag>{`>`}</MDXTag></MDXTag>{`\n);`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以创建一个新组件来负责获取数据渲染到上面的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CommentList`}</MDXTag>{` 函数组件中。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`CommentListContainer`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`constructor`}</MDXTag>{`() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`super`}</MDXTag>{`()\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`comments`}</MDXTag>{`: [] }\n  }\n\n  componentDidMount() {\n    \\$.ajax({\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`url`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"/my-comments.json\"`}</MDXTag>{`,\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`dataType`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`'json'`}</MDXTag>{`,\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`success`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`comments`}</MDXTag>{` =>`}</MDXTag>{`\n        `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`comments`}</MDXTag>{`: comments});\n    })\n  }\n\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`CommentList`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`comments`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{this.state.comments}`}</MDXTag>{` />`}</MDXTag>{`\n  }\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`对于不同的应用上下文，我们可以写不同的容器组件。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"高阶组件-higher-order-component\"}}>{`高阶组件 (Higher-order component)`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://zh.wikipedia.org/zh-cn/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`高阶函数`}</MDXTag>{` 是至少满足下列一个条件的函数：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`接受一个或多个函数作为输入`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`输出一个函数`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以高阶组件又是什么呢？`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`如果你已经用过 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`容器组件`}</MDXTag>{`, 这仅仅是一些泛化的组件, 包裹在一个函数中。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`让我们以 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Greeting`}</MDXTag>{` 组件开始`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` Greeting = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}>{`(`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`{ name }`}</MDXTag>{`) =>`}</MDXTag>{` {\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`if`}</MDXTag>{` (!name) {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`连接中...`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n  }\n\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag>{`Hi {name}!`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`</`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`div`}</MDXTag>{`>`}</MDXTag></MDXTag>{`;\n};`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`如果 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props.name`}</MDXTag>{` 存在，组件会渲染这个值。否则将展示「连接中...」。现在来添加点高阶的感觉`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` Connect = `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-function\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-params\"}}>{`ComposedComponent`}</MDXTag>{` =>`}</MDXTag>{`\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`constructor`}</MDXTag>{`() {\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`super`}</MDXTag>{`();\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"\"`}</MDXTag>{` };\n    }\n\n    componentDidMount() {\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-comment\"}}>{`// this would fetch or connect to a store`}</MDXTag>{`\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.setState({ `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"Michael\"`}</MDXTag>{` });\n    }\n\n    render() {\n      `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`ComposedComponent`}</MDXTag>{` {`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`...this.props`}</MDXTag>{`} `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{this.state.name}`}</MDXTag>{` />`}</MDXTag>{`;\n    }\n  };`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这是一个返回了入参为组件的普通函数`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`接着，我们需要把 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Greeting`}</MDXTag>{` 包裹到 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Connect`}</MDXTag>{` 中`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`const`}</MDXTag>{` ConnectedMyComponent = Connect(Greeting);`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这是一个强大的模式，它可以用来获取数据和给定数据到任意 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`函数组件`}</MDXTag>{` 中。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"状态提升-state-hoisting\"}}>{`状态提升 (State hoisting)`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`函数组件`}</MDXTag>{` 没有状态 (就像名字暗示的一样)。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`事件是状态的变化。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`它们的数据需要传递给状态化的父 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`容器组件`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这就是所谓的「状态提升」。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`它是通过将回调从容器组件传递给子组件来完成的`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`NameContainer`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Name`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`onChange`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{newName`}</MDXTag>{` =>`}</MDXTag>{` alert(newName)} />;\n  }\n}\n\nconst Name = ({ onChange }) => (\n  `}</MDXTag>{`<input onChange={e => onChange(e.target.value)} />\n);`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Name`}</MDXTag>{` 组件从 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`NameContainer`}</MDXTag>{` 组件中接收 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChange`}</MDXTag>{` 回调，并在 input 值变化的时候调用。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`上面的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`alert`}</MDXTag>{` 调用只是一个简单的演示，但它并没有改变状态`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`让我们来改变 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`NameContainer`}</MDXTag>{` 组件的内部状态。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`NameContainer`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`constructor`}</MDXTag>{`() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`super`}</MDXTag>{`();\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"\"`}</MDXTag>{` };\n  }\n\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`Name`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`onChange`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{newName`}</MDXTag>{` =>`}</MDXTag>{` this.setState({ name: newName })} />;\n  }\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这个状态 `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`被提升`}</MDXTag>{` 到了容器中，通过添加回调函数，回调中可以更新本地状态。这就设置了一个很清晰边界，并且使功能组件的可重用性最大化。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这个模式并不限于函数组件。因为函数组件没有生命周期事件，你也可以在类组件中使用这种模式。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\"><MDXTag name=\"a\" components={components} parentName=\"em\" props={{\"href\":\"#%E5%8F%97%E6%8E%A7%E8%BE%93%E5%85%A5-controlled-input\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`受控输入`}</MDXTag>{` 是一种与状态提升同时使用时很重要的模式`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`(最好是在一个状态化的组件上处理事件对象)`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"受控输入-controlled-input\"}}>{`受控输入 (Controlled input)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`讨论受控输入的抽象并不容易。让我们以一个不受控的（通常）输入开始。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<input type=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"text\"`}</MDXTag>{` />`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`当你在浏览器中调整此输入时，你会看到您的更改。 这个是正常的`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`受控的输入不允许 DOM 变更，这使得这个模式成为可能。通过在组件范围中设置值而不是直接在 DOM 范围中修改`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}>{`<input type=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"text\"`}</MDXTag>{` value=`}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"This won't change. Try it.\"`}</MDXTag>{` />`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`显示静态的输入框值对于用户来说并没有什么用处，所以，我们从状态中传递一个值到 input 上。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-class\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`class`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`ControlledNameInput`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-keyword\"}}>{`extends`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`React`}</MDXTag>{`.`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-title\"}}>{`Component`}</MDXTag>{` `}</MDXTag>{`{\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`constructor`}</MDXTag>{`() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`super`}</MDXTag>{`();\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`this`}</MDXTag>{`.state = { `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-attr\"}}>{`name`}</MDXTag>{`: `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-string\"}}>{`\"\"`}</MDXTag>{` };\n  }\n\n  render() {\n    `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`input`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`type`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`\"text\"`}</MDXTag>{` `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`value`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{this.state.name}`}</MDXTag>{` />`}</MDXTag>{`;\n  }\n}`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`然后改变组件的状态的时候 input 的值就自动改变了。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"hljs language-jsx\",\"metaString\":\"\"}}><MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"hljs-keyword\"}}>{`return`}</MDXTag>{` (\n  `}<MDXTag name=\"span\" components={components} parentName=\"code\" props={{\"className\":\"xml\"}}><MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-tag\"}}>{`<`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-name\"}}>{`input`}</MDXTag>{`\n    `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`value`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{this.state.name}`}</MDXTag>{`\n    `}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-attr\"}}>{`onChange`}</MDXTag>{`=`}<MDXTag name=\"span\" components={components} parentName=\"span\" props={{\"className\":\"hljs-string\"}}>{`{e`}</MDXTag>{` =>`}</MDXTag>{` this.setState({ name: e.target.value })}\n  />\n);`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这是一个受控的输入框。它只会在我们的组件状态发生变化的时候更新 DOM。这在创建一致 UI 界面的时候非常有用。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`_如果你使用 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`函数组件`}</MDXTag>{` 做为表单元素，那就得阅读 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87-state-hoisting\",\"target\":\"_blank\",\"rel\":[\"noreferrer\"]}}>{`状态提升`}</MDXTag>{` 一节，把状态转移到上层的组件树上。`}</MDXTag></MDXTag>\n  "],"mappingsbA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}