(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{239:function(e,a,n){__NEXT_REGISTER_PAGE("/",function(){return e.exports=n(240),{page:e.exports.default}})},240:function(e,a,n){"use strict";n.r(a);var t=n(0),s=n.n(t),m=n(1);n(114),n(115),n(50);function p(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},m=Object.keys(e);for(t=0;t<m.length;t++)n=m[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)n=m[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}a.default=function(e){var a=e.components;p(e,["components"]);return s.a.createElement(m.MDXTag,{name:"wrapper",components:a},s.a.createElement(m.MDXTag,{name:"h1",components:a,props:{id:"react-模式（中文版）-on-github"}},"React 模式（中文版） ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"h1",props:{href:"https://github.com/keelii/reactpatterns.cn",target:"_blank",rel:["noreferrer"]}},"on Github")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"contents"}},"Contents"),s.a.createElement(m.MDXTag,{name:"ul",components:a},s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component"}},"函数组件 (Function component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%B1%9E%E6%80%A7%E8%A7%A3%E6%9E%84-destructuring-props"}},"属性解构 (Destructuring props)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#jsx-%E4%B8%AD%E7%9A%84%E5%B1%95%E5%BC%80%E5%B1%9E%E6%80%A7-jsx-spread-attributes"}},"JSX 中的展开属性 (JSX spread attributes)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%90%88%E5%B9%B6%E8%A7%A3%E6%9E%84%E5%B1%9E%E6%80%A7%E5%92%8C%E5%85%B6%E5%AE%83%E5%80%BC-merge-destructured-props-with-other-values"}},"合并解构属性和其它值 (Merge destructured props with other values)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93-conditional-rendering"}},"条件渲染 (Conditional rendering)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%AD%90%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B-children-types"}},"子元素类型 (Children types)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%AD%90%E5%85%83%E7%B4%A0-array-as-children"}},"数组做为子元素 (Array as children)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%87%BD%E6%95%B0%E5%81%9A%E4%B8%BA%E5%AD%90%E5%85%83%E7%B4%A0-function-as-children"}},"函数做为子元素 (Function as children)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E6%B8%B2%E6%9F%93%E5%B1%9E%E6%80%A7-render-prop"}},"渲染属性 (Render prop)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BC%A0%E9%80%92-children-pass-through"}},"子组件的传递 (Children pass-through)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E4%BB%A3%E7%90%86%E7%BB%84%E4%BB%B6-proxy-component"}},"代理组件 (Proxy component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E6%A0%B7%E5%BC%8F%E7%BB%84%E4%BB%B6-style-component"}},"样式组件 (Style component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E7%BB%84%E7%BB%87%E4%BA%8B%E4%BB%B6-event-switch"}},"组织事件 (Event switch)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6-layout-component"}},"布局组件 (Layout component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component"}},"容器组件 (Container component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6-higher-order-component"}},"高阶组件 (Higher-order component)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87-state-hoisting"}},"状态提升 (State hoisting)")),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"#%E5%8F%97%E6%8E%A7%E8%BE%93%E5%85%A5-controlled-input"}},"受控输入 (Controlled input)"))),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"函数组件-function-component"}},"函数组件 (Function component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://reactjs.org/docs/components-and-props.html#function-and-class-components",target:"_blank",rel:["noreferrer"]}},"函数组件")," 是最简单的一种声明可复用组件的方法"),s.a.createElement(m.MDXTag,{name:"p",components:a},"他们就是一些简单的函数。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}}),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi there!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"从第一个形参中获取属性集 (props)\nCollect ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props")," from the first argument of your function."),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {props.name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"按自己的需要可以在函数组件中定义任意变量"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"strong",components:a,parentName:"p"},"最后一定要返回你的 React 组件。")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," style = {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"fontWeight"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"bold"'),",\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"color"),": context.color\n  };\n\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"style"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{style}"),">"),"Hi {props.name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"defaultProps")," 为任意必有属性设置默认值"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {props.name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}\nGreeting.defaultProps = {\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"Guest"'),"\n};")),s.a.createElement(m.MDXTag,{name:"hr",components:a}),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"属性解构-destructuring-props"}},"属性解构 (Destructuring props)"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",target:"_blank",rel:["noreferrer"]}},"解构赋值")," 是一种 JavaScript 特性。  "),s.a.createElement(m.MDXTag,{name:"p",components:a},"出自 ES2015 版的 JavaScript 新规范。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"所以看起来可能并不常见。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"好比字面量赋值的反转形式。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," person = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"chantastic"')," };\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," { name } = person;")),s.a.createElement(m.MDXTag,{name:"p",components:a},"同样适用于数组。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," things = [",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"one"'),", ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"two"'),"];\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," [first, second] = things;")),s.a.createElement(m.MDXTag,{name:"p",components:a},"解构赋值被用在很多 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component",target:"_blank",rel:["noreferrer"]}},"函数组件")," 中。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"下面声明的这些组件是相同的。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {props.name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}\n\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ name }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"有一种语法可以在对象中收集剩余属性。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"叫做 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters",target:"_blank",rel:["noreferrer"]}},"剩余参数"),"，看起来就像这样。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ name, ...restProps }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"那三个点 (",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"..."),") 会把所有的剩余属性分配给 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"restProps")," 对象"),s.a.createElement(m.MDXTag,{name:"p",components:a},"然而，你能使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"restProps")," 做些什么呢？"),s.a.createElement(m.MDXTag,{name:"p",components:a},"继续往下看..."),s.a.createElement(m.MDXTag,{name:"hr",components:a}),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"jsx-中的展开属性-jsx-spread-attributes"}},"JSX 中的展开属性 (JSX spread attributes)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"属性展开是 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://reactjs.org/docs/introducing-jsx.html",target:"_blank",rel:["noreferrer"]}},"JSX")," 中的一个的特性。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"它是一种语法，专门用来把对象上的属性转换成 JSX 中的属性"),s.a.createElement(m.MDXTag,{name:"p",components:a},"参考上面的 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%B1%9E%E6%80%A7%E8%A7%A3%E6%9E%84-(Destructuring-props)",target:"_blank",rel:["noreferrer"]}},"属性解构"),",",s.a.createElement(m.MDXTag,{name:"br",components:a,parentName:"p"}),"我们可以 ",s.a.createElement(m.MDXTag,{name:"strong",components:a,parentName:"p"},"扩散")," ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"restProps")," 对象的所有属性到 div 元素上"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ name, ...restProps }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...restProps"),"}>"),"Hi {name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"这让 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Gretting")," 组件变得非常灵活。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以通过传给 Gretting 组件 DOM 属性并确定这些属性一定会被传到 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"div")," 上"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<Greeting name=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"Fancy pants"')," className=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"fancy-greeting"')," id=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"user-greeting"')," />")),s.a.createElement(m.MDXTag,{name:"p",components:a},"避免传递非 DOM 属性到组件上。\nAvoid forwarding non-DOM ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props")," to components.",s.a.createElement(m.MDXTag,{name:"br",components:a,parentName:"p"}),"解构赋值是如此的受欢迎，是因为它可以分离 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"组件特定的属性")," 和 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"DOM/平台特定属性")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Greeting"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ name, ...platformProps }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...platformProps"),"}>"),"Hi {name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"hr",components:a}),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"合并解构属性和其它值-merge-destructured-props-with-other-values"}},"合并解构属性和其它值 (Merge destructured props with other values)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"组件就是一种抽象。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"好的抽象是可以扩展的。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"比如说下面这个组件使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"class")," 属性来给按钮添加样式。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"MyButton"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"button")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},'"btn"')," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...props"),"} />"),";\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"一般情况下这样做就够了，除非我们需要扩展其它的样式类"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<MyButton className=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"delete-btn"'),">Delete...<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/MyButton>"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"在这个例子中把 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"btn")," 替换成 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"delete-btn")),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#JSX-%E4%B8%AD%E7%9A%84%E5%B1%95%E5%BC%80%E5%B1%9E%E6%80%A7-(JSX-spread-attributes)",target:"_blank",rel:["noreferrer"]}},"JSX 中的展开属性")," 对先后顺序是敏感的"),s.a.createElement(m.MDXTag,{name:"p",components:a},"扩散属性中的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"className")," 会覆盖组件上的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"className"),"。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以改变它两的顺序，但是目前来说 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"className")," 只有 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"btn"),"。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"MyButton"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"button")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...props"),"} ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},'"btn"')," />"),";\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们需要使用解构赋值来合并入参 props 中的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"className")," 和基础的（组件中的） ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"className"),"。\n可以通过把所有的值放在一个数组里面，然后使用一个空格连接它们。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"MyButton"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ className, ...props }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," classNames = [",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"btn"'),", className].join(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'" "'),");\n\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"button")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{classNames}")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...props"),"} />"),";\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"为了保证 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"undefined")," 被显示在 className 上，可以使用 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Default_values_2",target:"_blank",rel:["noreferrer"]}},"默认值"),"。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"MyButton"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ className = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},'""'),", ...props }"),") "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"let")," classNames = [",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"btn"'),", className].join(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'" "'),");\n\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"button")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{classNames}")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...props"),"} />"),";\n}"))),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"条件渲染-conditional-rendering"}},"条件渲染 (Conditional rendering)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"不可以在一个组件声明中使用 if/else 语句\nYou can't use if/else statements inside a component declarations.",s.a.createElement(m.MDXTag,{name:"br",components:a,parentName:"p"}),"所以可以使用 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator",target:"_blank",rel:["noreferrer"]}},"条件（三元）运算符")," 和 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Short-circuit_evaluation",target:"_blank",rel:["noreferrer"]}},"短路计算"),"。"),s.a.createElement(m.MDXTag,{name:"h3",components:a,props:{id:"如果"}},s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"h3"},"如果")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"{\n  condition && ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">"),"Rendered when `truthy`",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"h3",components:a,props:{id:"除非"}},s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"h3"},"除非")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"{\n  condition || ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">"),"Rendered when `falsy`",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">")),";\n}")),s.a.createElement(m.MDXTag,{name:"h3",components:a,props:{id:"如果-否则"}},s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"h3"},"如果-否则")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"{\n  condition ? (\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">"),"Rendered when `truthy`",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">")),"\n  ) : (\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">"),"Rendered when `falsy`",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"span"),">")),"\n  );\n}")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"子元素类型-children-types"}},"子元素类型 (Children types)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"很多类型都可以做为 React 的子元素。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"多数情况下会是 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"数组")," 或者 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"字符串"),"。"),s.a.createElement(m.MDXTag,{name:"h3",components:a,props:{id:"字符串-string"}},"字符串 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"h3"},"String")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<div>Hello World!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")))),s.a.createElement(m.MDXTag,{name:"h3",components:a,props:{id:"数组-array"}},"数组 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"h3"},"Array")),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<div>{[",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"Hello "'),", <span>World<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},'/span>, "!"]}</'),"div>")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"数组做为子元素-array-as-children"}},"数组做为子元素 (Array as children)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"将数组做为子元素是很常见的。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"列表是如何在 React 中被绘制的。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"map()")," 方法创建一个新的 React 元素数组"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<ul>\n  {[",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"first"'),", ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"second"'),"].map(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"item")," =>")," (\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"li"),">"),"{item}",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"li"),">")),"\n  ))}\n<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/ul>"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"这和使用字面量数组是一样的。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<ul>{[",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"li"),">"),"first",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"li"),">")),", <li>second<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/li>]}</u"),"l>")),s.a.createElement(m.MDXTag,{name:"p",components:a},"这个模式可以联合解构、JSX 属性扩散以及其它组件一起使用，看起来简洁无比"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<ul>\n  {arrayOfMessageObjects.map(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ id, ...message }"),") =>")," (\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Message")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"key"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{id}")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...message"),"} />"),"\n  ))}\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"ul"),">")))),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"函数做为子元素-function-as-children"}},"函数做为子元素 (Function as children)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"React 组件不支持函数类型的子元素。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"然而 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E6%B8%B2%E6%9F%93%E5%B1%9E%E6%80%A7-render-prop",target:"_blank",rel:["noreferrer"]}},"渲染属性")," 是一种可以创建组件并以函数作为子元素的模式。"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"渲染属性-render-prop"}},"渲染属性 (Render prop)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"这里有个组件，使用了一个渲染回调函数 children。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"这样写并没有什么用，但是可以做为入门的简单例子。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Width = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ children }"),") =>")," children(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"500"),");")),s.a.createElement(m.MDXTag,{name:"p",components:a},"组件把 children 做为函数调用，同时还可以传一些参数。上面这个 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"500")," 就是实参。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"为了使用这个组件，我们可以在调用组件的时候传入一个子元素，这个子元素就是一个函数。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<Width>{width => ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"window is {width}",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),"}<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/Width>"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以得到下面的输出。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<div>",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"window")," is ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"500"),"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/div>"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"有了这个组件，我们就可以用它来做渲染策略。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<Width>\n  {width => (width > ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"600")," ? ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"min-width requirement met!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"))," : ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"null"),")}\n<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/Width>"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"如果有更复杂的条件判断，我们可以使用这个组件来封装另外一个新组件来利用原来的逻辑。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," MinWidth = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ width: minWidth, children }"),") =>")," (\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Width"),">"),"{width => (width > minWidth ? children : null)}",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Width"),">")),"\n);")),s.a.createElement(m.MDXTag,{name:"p",components:a},"显然，一个静态的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Width")," 组件并没有什么用处，但是给它绑定一些浏览器事件就不一样了。下面有个实现的例子。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"WindowWidth")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"constructor"),"() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"super"),"();\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"width"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"0")," };\n  }\n\n  componentDidMount() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState(\n      { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"width"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"window"),".innerWidth },\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"window"),".addEventListener(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"resize"'),", ({ target }) =>\n        ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"width"),": target.innerWidth })\n      )\n    );\n  }\n\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".props.children(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state.width);\n  }\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"许多开发人员都喜欢 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6-higher-order-component",target:"_blank",rel:["noreferrer"]}},"高阶组件")," 来实现这种功能。但这只是个人喜好问题。"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"子组件的传递-children-pass-through"}},"子组件的传递 (Children pass-through)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"你可能会创建一个组件，这个组件会使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"context")," 并且渲染它的子元素。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"SomeContextProvider")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  getChildContext() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"some"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"context"')," };\n  }\n\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// 如果能直接返回 `children` 就完美了"),"\n  }\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"你将面临一个选择。把 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"children")," 包在一个 div 中并返回，或者直接返回 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"children"),"。第一种情况需要要你添加额外的标记（这可能会影响到你的样式）。第二种将产生一个没什么用处的错误。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// option 1: extra div"),"\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"{children}",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// option 2: unhelpful errors"),"\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," children;")),s.a.createElement(m.MDXTag,{name:"p",components:a},"最好把 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"children")," 做为一种不透明的数据类型对待。React 提供了 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"React.Children")," 方法来处理 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"children"),"。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," React.Children.only(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".props.children);")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"代理组件-proxy-component"}},"代理组件 (Proxy component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"em",components:a,parentName:"p"},"(我并不确定这个名字的准确叫法 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"em"},"译：代理、中介、装饰..."),")")),s.a.createElement(m.MDXTag,{name:"p",components:a},"按钮在 web 应用中随处可见。并且所有的按钮都需要一个 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},'type="button"')," 的属性。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<button type=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"button"'),">")),s.a.createElement(m.MDXTag,{name:"p",components:a},"重复的写这些属性很容易出错。我们可以写一个高层组件来代理 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props")," 到底层组件。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Button = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props")," =>"),"\n  <button type=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"button"')," {...props}>")),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Button")," 组件代替 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"button")," 元素，并确保 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"type")," 属性始终是 button。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<Button />\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},'// <button type="button"><button>'),"\n\n<Button className=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"CTA"'),">Send Money<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/Button>\n/"),s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},'/ <button type="button" class="CTA">Send Money</'),"button>")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"样式组件-style-component"}},"样式组件 (Style component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"这也是一种 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E4%BB%A3%E7%90%86%E7%BB%84%E4%BB%B6-proxy-component",target:"_blank",rel:["noreferrer"]}},"代理组件"),"，用来处理样式。"),s.a.createElement(m.MDXTag,{name:"p",components:a},'假如我们有一个按钮，它使用了 "primary" 做为样式类。'),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<button type=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"button"')," className=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"btn btn-primary"'),">")),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们使用一些单一功能组件来生成上面的结构。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"import")," classnames ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"from")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"classnames"'),";\n\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," PrimaryBtn = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"props")," =>")," <Btn {...props} primary />;\n\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Btn = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ className, primary, ...props }"),") =>")," (\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"button"),"\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"type"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},'"button"'),"\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{classnames("),'"',s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"btn"),'", ',s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"primary"),' && "',s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"btn-primary"),'", ',s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"className"),")}\n    {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...props"),"}\n  />"),"\n);"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"可以可视化的展示成下面的样子。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"PrimaryBtn()\n  ↳ Btn({",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"primary"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"true"),"})\n    ↳ Button({",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"className"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"btn btn-primary"'),"}, ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"type"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"button"'),"})\n      ↳ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'\'<button type="button" class="btn btn-primary"></button>\''))),s.a.createElement(m.MDXTag,{name:"p",components:a},"使用这些组件，下面的这几种方式会得到一致的结果。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<PrimaryBtn />\n",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Btn")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"primary")," />"),"\n"),'<button type="button" className="btn btn-primary" />')),s.a.createElement(m.MDXTag,{name:"p",components:a},"这对于样式维护来说是非常好的。它将样式的所有关注点分离到单个组件。"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"组织事件-event-switch"}},"组织事件 (Event switch)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"当我们在写事件处理函数的时候，通常会使用 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"handle{事件名字}")," 的命名方式。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"handleClick(e) { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"/* do something */")," }")),s.a.createElement(m.MDXTag,{name:"p",components:a},"当需要添加很多事件处理函数的时候，这些函数名字会显得很重复。这些函数的名字并没有什么价值，因为它们只代理了一些动作或者函数。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"handleClick() { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"require"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"./actions/doStuff"'),")(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"/* action stuff */"),") }\nhandleMouseEnter() { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"hovered"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"true")," }) }\nhandleMouseLeave() { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"hovered"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"false")," }) }")),s.a.createElement(m.MDXTag,{name:"p",components:a},"可以考虑写一个事件处理函数来根据不同的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"event.type")," 来组织事件。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"handleEvent({type}) {\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"switch"),"(type) {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"case")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"click"'),":\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"require"),"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"./actions/doStuff"'),")(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"/* action dates */"),")\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"case")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"mouseenter"'),":\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"hovered"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"true")," })\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"case")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"mouseleave"'),":\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"hovered"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"false")," })\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"default"),":\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"console"),".warn(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'`No case for event type "',s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${type}"),'"`'),")\n  }\n}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"另外，对于简单的组件，你可以在组件中使用箭头函数直接调用导入的动作或者函数"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<div onClick={() => someImportedAction({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"action"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"DO_STUFF"')," })}")),s.a.createElement(m.MDXTag,{name:"p",components:a},"在遇到性能问题之前，不要担心性能优化。真的不要"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"布局组件-layout-component"}},"布局组件 (Layout component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"布局组件表现为一些静态 DOM 元素的形式。它们一般并不需要经常更新。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"就像下面的这个组件一样，两边各自渲染了一个 children。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<HorizontalSplit\n  leftSide={<SomeSmartComponent />}\n  rightSide={<AnotherSmartComponent />}\n/>")),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以优化这个组件。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"HorizontalSplit 组件是两个子组件的父元素，我们可以告诉组件永远都不要更新"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"HorizontalSplit")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  shouldComponentUpdate() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"false"),";\n  }\n\n  render() {\n    <FlexContainer>\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"{this.props.leftSide}",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),"\n      <div>{",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".props.rightSide}<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-regexp"}},"/div>\n    </"),"FlexContainer>;\n  }\n}")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"容器组件-container-component"}},"容器组件 (Container component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},'"容器用来获取数据然后渲染到子组件上，仅仅如此。"',"—",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://twitter.com/jasonbonta",target:"_blank",rel:["noreferrer"]}},"Jason Bonta")),s.a.createElement(m.MDXTag,{name:"p",components:a},"这有一个 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"CommentList")," 组件。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," CommentList = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ comments }"),") =>")," (\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"ul"),">"),"\n    {comments.map(comment => (\n      "),"<li>\n        {comment.body}-{comment.author}\n      </li>",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},"\n    ))}\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"ul"),">")),"\n);")),s.a.createElement(m.MDXTag,{name:"p",components:a},"我们可以创建一个新组件来负责获取数据渲染到上面的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"CommentList")," 函数组件中。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"CommentListContainer")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"constructor"),"() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"super"),"()\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"comments"),": [] }\n  }\n\n  componentDidMount() {\n    $.ajax({\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"url"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"/my-comments.json"'),",\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"dataType"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'json'"),",\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"success"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"comments")," =>"),"\n        ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"comments"),": comments});\n    })\n  }\n\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"CommentList")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"comments"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{this.state.comments}")," />"),"\n  }\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"对于不同的应用上下文，我们可以写不同的容器组件。"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"高阶组件-higher-order-component"}},"高阶组件 (Higher-order component)"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://zh.wikipedia.org/zh-cn/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0",target:"_blank",rel:["noreferrer"]}},"高阶函数")," 是至少满足下列一个条件的函数："),s.a.createElement(m.MDXTag,{name:"ul",components:a},s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},"接受一个或多个函数作为输入"),s.a.createElement(m.MDXTag,{name:"li",components:a,parentName:"ul"},"输出一个函数")),s.a.createElement(m.MDXTag,{name:"p",components:a},"所以高阶组件又是什么呢？"),s.a.createElement(m.MDXTag,{name:"p",components:a},"如果你已经用过 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component",target:"_blank",rel:["noreferrer"]}},"容器组件"),", 这仅仅是一些泛化的组件, 包裹在一个函数中。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"让我们以 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Greeting")," 组件开始"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Greeting = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ name }"),") =>")," {\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"if")," (!name) {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"连接中...",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n  }\n\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">"),"Hi {name}!",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"</",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"div"),">")),";\n};")),s.a.createElement(m.MDXTag,{name:"p",components:a},"如果 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"props.name")," 存在，组件会渲染这个值。否则将展示「连接中...」。现在来添加点高阶的感觉"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Connect = ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"ComposedComponent")," =>"),"\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"constructor"),"() {\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"super"),"();\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'""')," };\n    }\n\n    componentDidMount() {\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// this would fetch or connect to a store"),"\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".setState({ ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"Michael"')," });\n    }\n\n    render() {\n      ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"ComposedComponent")," {",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"...this.props"),"} ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"name"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{this.state.name}")," />"),";\n    }\n  };"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"这是一个返回了入参为组件的普通函数"),s.a.createElement(m.MDXTag,{name:"p",components:a},"接着，我们需要把 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Greeting")," 包裹到 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Connect")," 中"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," ConnectedMyComponent = Connect(Greeting);")),s.a.createElement(m.MDXTag,{name:"p",components:a},"这是一个强大的模式，它可以用来获取数据和给定数据到任意 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component",target:"_blank",rel:["noreferrer"]}},"函数组件")," 中。"),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"状态提升-state-hoisting"}},"状态提升 (State hoisting)"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component",target:"_blank",rel:["noreferrer"]}},"函数组件")," 没有状态 (就像名字暗示的一样)。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"事件是状态的变化。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"它们的数据需要传递给状态化的父 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%AE%B9%E5%99%A8%E7%BB%84%E4%BB%B6-container-component",target:"_blank",rel:["noreferrer"]}},"容器组件")),s.a.createElement(m.MDXTag,{name:"p",components:a},"这就是所谓的「状态提升」。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"它是通过将回调从容器组件传递给子组件来完成的"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"NameContainer")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Name")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"onChange"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{newName")," =>")," alert(newName)} />;\n  }\n}\n\nconst Name = ({ onChange }) => (\n  "),"<input onChange={e => onChange(e.target.value)} />\n);")),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Name")," 组件从 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"NameContainer")," 组件中接收 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"onChange")," 回调，并在 input 值变化的时候调用。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"上面的 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"alert")," 调用只是一个简单的演示，但它并没有改变状态"),s.a.createElement(m.MDXTag,{name:"p",components:a},"让我们来改变 ",s.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"NameContainer")," 组件的内部状态。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"NameContainer")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"constructor"),"() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"super"),"();\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'""')," };\n  }\n\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"Name")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"onChange"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{newName")," =>")," this.setState({ name: newName })} />;\n  }\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"这个状态 ",s.a.createElement(m.MDXTag,{name:"em",components:a,parentName:"p"},"被提升")," 到了容器中，通过添加回调函数，回调中可以更新本地状态。这就设置了一个很清晰边界，并且使功能组件的可重用性最大化。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"这个模式并不限于函数组件。因为函数组件没有生命周期事件，你也可以在类组件中使用这种模式。"),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"em",components:a,parentName:"p"},s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"em",props:{href:"#%E5%8F%97%E6%8E%A7%E8%BE%93%E5%85%A5-controlled-input",target:"_blank",rel:["noreferrer"]}},"受控输入")," 是一种与状态提升同时使用时很重要的模式")),s.a.createElement(m.MDXTag,{name:"p",components:a},s.a.createElement(m.MDXTag,{name:"em",components:a,parentName:"p"},"(最好是在一个状态化的组件上处理事件对象)")),s.a.createElement(m.MDXTag,{name:"h2",components:a,props:{id:"受控输入-controlled-input"}},"受控输入 (Controlled input)"),s.a.createElement(m.MDXTag,{name:"p",components:a},"讨论受控输入的抽象并不容易。让我们以一个不受控的（通常）输入开始。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<input type=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"text"')," />")),s.a.createElement(m.MDXTag,{name:"p",components:a},"当你在浏览器中调整此输入时，你会看到您的更改。 这个是正常的"),s.a.createElement(m.MDXTag,{name:"p",components:a},"受控的输入不允许 DOM 变更，这使得这个模式成为可能。通过在组件范围中设置值而不是直接在 DOM 范围中修改"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},"<input type=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"text"')," value=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"This won\'t change. Try it."')," />")),s.a.createElement(m.MDXTag,{name:"p",components:a},"显示静态的输入框值对于用户来说并没有什么用处，所以，我们从状态中传递一个值到 input 上。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"class")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"ControlledNameInput")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"extends")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"React"),".",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"Component")," "),"{\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"constructor"),"() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"super"),"();\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"this"),".state = { ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"name"),": ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'""')," };\n  }\n\n  render() {\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"input")," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"type"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},'"text"')," ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"value"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{this.state.name}")," />"),";\n  }\n}"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"然后改变组件的状态的时候 input 的值就自动改变了。"),s.a.createElement(m.MDXTag,{name:"pre",components:a},s.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-jsx",metaString:""}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," (\n  ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"xml"}},s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-tag"}},"<",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-name"}},"input"),"\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"value"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{this.state.name}"),"\n    ",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-attr"}},"onChange"),"=",s.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-string"}},"{e")," =>")," this.setState({ name: e.target.value })}\n  />\n);"))),s.a.createElement(m.MDXTag,{name:"p",components:a},"这是一个受控的输入框。它只会在我们的组件状态发生变化的时候更新 DOM。这在创建一致 UI 界面的时候非常有用。"),s.a.createElement(m.MDXTag,{name:"p",components:a},"_如果你使用 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6-function-component",target:"_blank",rel:["noreferrer"]}},"函数组件")," 做为表单元素，那就得阅读 ",s.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87-state-hoisting",target:"_blank",rel:["noreferrer"]}},"状态提升")," 一节，把状态转移到上层的组件树上。"))}}},[[239,1,0]]]);